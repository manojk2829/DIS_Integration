package com.carrieriq.DIS_Integration;import org.openqa.selenium.*;import org.openqa.selenium.interactions.Actions;import org.openqa.selenium.support.ui.ExpectedConditions;import org.openqa.selenium.support.ui.WebDriverWait;import org.testng.annotations.*;import java.util.concurrent.TimeUnit;import org.openqa.selenium.support.ui.Select;import static org.testng.Assert.assertTrue;public class ValidatePackage {    static final String METRIC_SEARCH_START_DATE = "10.01.1999";    static final String METRIC_SEARCH_START_TIME = "00:00";    static final String METRIC_SEARCH_END_DATE = "01.01.2016";    static final String METRIC_SEARCH_END_TIME = "23:59";    static final String TEST_TO_BE_VALIDATE_WITH_1 = "7_104_MT_VoLTE_Call";    static final String METRIC_SEARCH_TRIGGER_1 = "UPTR";    static final String METRIC_SEARCH_TRIGGER_5 = "TION";    static final String METRIC_SEARCH_TRIGGER_2 = "GS01";    static final String METRIC_SEARCH_TRIGGER_3 = "GS02";    static final String METRIC_SEARCH_TRIGGER_4 = "GS03";    static final String TEST_TO_BE_VALIDATE_WITH_2 = "7_90_Removable_Battery";    private WebDriver driver;    private WebDriverWait myWait;    @BeforeMethod    //@Parameters({"url", "user", "password"})    @Parameters({"browser","local_run"})    public void setUp(String browser, Boolean isLocalRun) throws Exception {        driver = WebDriverFactory.getDriver(browser,isLocalRun);        driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);        driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);        driver.manage().window().setSize(new Dimension(1920, 1080));        myWait = new WebDriverWait(driver, 45);        driver.get(PropertiesLoader.URL);        driver.findElement(By.id("txtUsernameLogin")).sendKeys(PropertiesLoader.USER);        driver.findElement(By.name("txtPassword")).sendKeys(PropertiesLoader.PASS);        driver.findElement(By.className("submit")).click();    }    @AfterMethod    public void tearDown() {        driver.quit();    }    public void selectValueForMetricSearch(String value) throws Exception {        driver.findElement(By.id("textInput_metricsAutofill")).sendKeys(value);        myWait.until(ExpectedConditions.presenceOfElementLocated(By.id("suggItem_metricsAutofill[0]")));        String trigger;        int index = -1;        boolean found = true;        while (found) {            index++;            trigger = driver.findElement(By.id("suggItem_metricsAutofill[" + index + "]")).getText();            if (trigger.startsWith(value)) {                found = false;            }        }        driver.findElement(By.id("suggItem_metricsAutofill[" + index + "]")).click();    }    public void selectValueFromTriggerSearch(String value) throws Exception {        driver.findElement(By.id("textInput_triggersAutofill")).sendKeys(value);        myWait.until(ExpectedConditions.presenceOfElementLocated(By.id("suggItem_triggersAutofill[0]")));        String trigger;        int index = -1;        boolean found = true;        while (found) {            index++;            trigger = driver.findElement(By.id("suggItem_triggersAutofill[" + index + "]")).getText();            if (trigger.startsWith(value)) {                found = false;            }        }        WebElement element = driver.findElement(By.id("suggItem_triggersAutofill[" + index + "]"));        Actions actions = new Actions(driver);        actions.moveToElement(element);        actions.perform();        element.click();        //driver.findElement(By.id("suggItem_triggersAutofill[" + index + "]")).click();    }    public void selectValueForTestCaseSearch(String value) throws Exception {        driver.findElement(By.id("textInput_testCaseAutofill")).sendKeys(value);        myWait.until(ExpectedConditions.presenceOfElementLocated(By.id("suggItem_testCaseAutofill[0]")));        int index = -1;        boolean found = true;        while (found) {            index++;            String trigger = driver.findElement(By.id("suggItem_testCaseAutofill[" + index + "]")).getText();            if (trigger.startsWith(value)) {                found = false;            }        }        driver.findElement(By.id("suggItem_testCaseAutofill[" + index + "]")).click();    }    public void setStarEndDatesAndTime() throws Exception {        //after content is loaded, type mdn, start/end date/time in text fields, then click on submit (Search)        driver.findElement(By.id("startDate")).clear();        driver.findElement(By.id("startTime")).clear();        //driver.findElement(By.id("endDate")).clear();        driver.findElement(By.id("endTime")).clear();        driver.findElement(By.id("startDate")).sendKeys(METRIC_SEARCH_START_DATE);        driver.findElement(By.id("startTime")).sendKeys(METRIC_SEARCH_START_TIME);        //driver.findElement(By.id("endDate")).sendKeys(METRIC_SEARCH_END_DATE);        driver.findElement(By.id("endTime")).sendKeys(METRIC_SEARCH_END_TIME);    }//    @Test//    public void testEnablePackageValidator() throws Exception {//        driver.findElement(By.xpath("//*[@id=\"portal\"]/ul[2]/li[2]/a")).click();//        driver.findElement(By.xpath("//*[@id=\"preferencesForm\"]/div/div/div[3]/a")).click();//        myWait.until(ExpectedConditions.presenceOfElementLocated(By.id("CIQ_DIS_USER_validation")));//        boolean enabled = driver.findElement(By.id("CIQ_DIS_USER_validation")).isEnabled();//        if (!enabled) driver.findElement(By.id("CIQ_DIS_USER_validation")).click();//        driver.findElement(By.xpath("//*[@id=\"header\"]/ul[1]/li[1]/a")).click();//        driver.findElement(By.linkText("Metric/Trigger Search")).click();//        setStarEndDatesAndTime();//        selectValueFromTriggerSearch(METRIC_SEARCH_TRIGGER_1);//        driver.findElement(By.name("btnSubmit")).click();//        myWait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("/html/body/div/div[3]/table[1]/tbody/tr/td[1]/h1")));//        boolean present = driver.findElement(By.xpath("//input[@value='Validate Package(s)']")).isDisplayed();//        assertTrue(present);//    }    //T_01 - Verify that the user can get to package Validation from search results    @Test    public void testPackageValidationFromSearch() throws Exception {        //click on "Metric/Trigger Search" tab        Thread.sleep(5000);        driver.findElement(By.linkText("Metric/Trigger Search")).click();        //after content is loaded, type mdn, start/end date/time in text fields, then click on submit (Search)        setStarEndDatesAndTime();        selectValueFromTriggerSearch(METRIC_SEARCH_TRIGGER_1);        driver.findElement(By.name("btnSubmit")).click();        driver.findElement(By.id("selectPkgsAllCheckBox")).click();        driver.findElement(By.xpath("//input[@value='Validate Package(s)']")).click();        assertTrue(driver.findElement(By.xpath("//div[@class='content']/table/tbody/tr/td/h1")).getText()                .contains("Package Validation Confirm"));    }    //T_02 - Verify the functionality of Download reports    @Test    public void testPackageValidationForResults() throws Exception {        //click on "Metric/Trigger Search" tab        driver.findElement(By.linkText("Metric/Trigger Search")).click();        //after content is loaded, type mdn, start/end date/time in text fields, then click on submit (Search)        setStarEndDatesAndTime();        //click on '*' of triggers, then find trigger UPTR        selectValueFromTriggerSearch(METRIC_SEARCH_TRIGGER_1);        driver.findElement(By.name("btnSubmit")).click();        driver.findElement(By.id("selectPkgsAllCheckBox")).click();        driver.findElement(By.xpath("//input[@value='Validate Package(s)']")).click();        selectValueForTestCaseSearch(TEST_TO_BE_VALIDATE_WITH_1);        driver.findElement(By.xpath("//input[@value='Validate Package(s)']")).click();        assertTrue(driver.findElement(By.xpath("//div[@class='val_list']/table/tbody/tr/td[1]")).getText()                .contains("Run date"));        driver.findElement(By.xpath("//input[@value='Download reports']")).click();        Alert myAlert = driver.switchTo().alert(); //Switch to alert pop-up        myAlert.accept(); //accept the alert - equivalent of pressing OK    }    //T_02 - Verify that the Test Summary details are present in page if there are no mapped packages    @Test    public void testTestSummaryForNoMappings() throws Exception {        //click on "Metric/Trigger Search" tab        driver.findElement(By.linkText("Metric/Trigger Search")).click();        //after content is loaded, type mdn, start/end date/time in text fields, then click on submit (Search)        setStarEndDatesAndTime();        //click on '*' of triggers, then find trigger UPTR        //driver.findElement(By.xpath("//span[@id='parentoo_triggersAutofill']/table/tbody/tr/td[2]/input")).click();        selectValueFromTriggerSearch(METRIC_SEARCH_TRIGGER_1);        driver.findElement(By.name("btnSubmit")).click();        driver.findElement(By.id("selectPkgsAllCheckBox")).click();        driver.findElement(By.xpath("//input[@value='Validate Package(s)']")).click();        selectValueForTestCaseSearch(TEST_TO_BE_VALIDATE_WITH_1);        driver.findElement(By.xpath("//input[@value='Validate Package(s)']")).click();        assertTrue(driver.findElement(By.xpath("//div[@class='val_list']/table/tbody/tr/td[1]")).getText()                .contains("Run date"));        assertTrue(driver.findElement(By.xpath("//div[@class='content']/table/tbody/tr/td/html/h1[2]")).getText()                .contains("Test Summary"));    }    //T_03 - Verify that the Test Summary details are present in page if there are mapped packages    @Test    public void testTestSummaryForMappings() throws Exception {        //click on "Metric/Trigger Search" tab        driver.findElement(By.linkText("Metric/Trigger Search")).click();        //after content is loaded, type mdn, start/end date/time in text fields, then click on submit (Search)        setStarEndDatesAndTime();        //Set Trigger to SG01        //selectValueFromTriggerSearch(METRIC_SEARCH_TRIGGER_2);        //Set Metric GS01//        selectValueForMetricSearch(METRIC_SEARCH_TRIGGER_2);        //Set Metric GS02//        selectValueForMetricSearch(METRIC_SEARCH_TRIGGER_3);        //Set Metric GS03//        selectValueForMetricSearch(METRIC_SEARCH_TRIGGER_4);//        selectValueFromTriggerSearch(METRIC_SEARCH_TRIGGER_1);        selectValueFromTriggerSearch(METRIC_SEARCH_TRIGGER_5);        driver.findElement(By.name("btnSubmit")).click();        Thread.sleep(5000);        driver.findElement(By.id("selectPkgsAllCheckBox")).click();        //driver.findElement(By.xpath("//*[@id=\"selectPkgsAllCheckBox\"]")).click();        driver.findElement(By.xpath("//input[@value='Validate Package(s)']")).click();        selectValueForTestCaseSearch(TEST_TO_BE_VALIDATE_WITH_2);        driver.findElement(By.xpath("//input[@value='Validate Package(s)']")).click();        //driver.findElement(By.xpath("//div[@class='val_list']/table/tbody/tr[1]/td[10]/a")).click();        //driver.findElement(By.xpath("/html/body/div/div[3]/table[2]/tbody/tr/td/div[3]/table/tbody/tr/td/table/tbody/tr[1]/td[10]/a")).click();        driver.findElement(By.xpath("/html/body/div/div[3]/table[2]/tbody/tr/td/html/div[4]/table/tbody/tr/td/table/tbody/tr[1]/td[10]/a")).click();//        assertTrue(driver.findElement(By.xpath("//div[@class='val_list']/table/tbody/tr/td[1]")).getText()//                .contains("Run date"));//        assertTrue(driver.findElement(By.xpath("//div[@class='content']/table/tbody/tr/td/html/h1[2]")).getText()//                .contains("Test Summary"));//        assertTrue(driver.findElement(By.xpath("//div[@class='content']/table/tbody/tr/td/html/h1[3]")).getText()//                .contains("Duplicate metrics found"));        assertTrue(driver.findElement(By.xpath("/html/body/div/div[3]/table[2]/tbody/tr/td/html/h1[2]")).getText()                .contains("Package summary"));    }}